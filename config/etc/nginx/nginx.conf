# EngineScript
user www-data;

worker_cpu_affinity auto;
worker_processes auto;
worker_rlimit_nofile SEDNGINXRLIMIT;

pcre_jit on;
pid /run/nginx.pid;
#quic_bpf on; # HTTP3
timer_resolution 100ms;

# Thread Pool
#thread_pool es_threads threads=2;

events {
  worker_connections SEDNGINXWORKERCONNECTIONS;
  accept_mutex off;
  accept_mutex_delay 200ms;
  use epoll;
  multi_accept on;
}

http {
  # Main Logs
  log_format main '$remote_addr - $remote_user [$time_local] $request '
  '"$status" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" "$gzip_ratio"'
  '"$connection" "$connection_requests" "$request_time" $http_cf_ray '
  '$ssl_protocol $ssl_cipher';

  #log_format main_json escape=json '{'
  #  '"connection": "$connection", ' # connection serial number
  #  '"connection_requests": "$connection_requests", ' # number of requests made in connection
  #  '"remote_addr": "$remote_addr", ' # client IP
  #  '"remote_user": "$remote_user", ' # client HTTP username
  #  '"request": "$request", ' # full path no arguments if the request
  #  '"status": "$status", ' # response status code
  #  '"http_referer": "$http_referer", ' # HTTP referer
  #  '"http_user_agent": "$http_user_agent", ' # user agent
  #  '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
  #  '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
  #  '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
  #  '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
  #  '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
  #  '"request_method": "$request_method", ' # request method
  #  '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
  #  '"gzip_ratio": "$gzip_ratio", '
  #  '"http_cf_ray": "$http_cf_ray", '
  #'}';

  # HTTP_Proxy exploit log
  # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx
  #log_format proxylog '$remote_addr - $remote_user [$time_local] '
  #'"$request" $status $body_bytes_sent '
  #'"$http_referer" "$http_user_agent" '
  #'"$http_proxy"';
  
  # Enable access log if you want to use ngxtop to monitor traffic
  access_log off;
  #access_log /dev/null crit;
  #access_log /var/log/nginx/nginx.access.log main buffer=128k flush=5m;
  error_log /var/log/nginx/nginx.error.log warn;

  # Log requests with an HTTP_Proxy using the 'proxylog' format
  #access_log /var/log/nginx/badactor.log proxylog if=$http_proxy;

  index index.htm index.html index.php;

  include /etc/nginx/globals/mime-types.conf;

  default_type application/octet-stream;
  charset utf-8;

  # Nginx Tuning
  aio on;
  aio_write on;
  client_body_buffer_size 64k;
  client_body_in_file_only off;
  client_body_timeout 15s;
  client_header_buffer_size 2k;
  client_header_timeout 15s;
  client_max_body_size 128m;
  connection_pool_size 512;
  directio 8m;
  directio_alignment 512;
  etag on;
  http2 on;
  if_modified_since exact;
  ignore_invalid_headers on;
  keepalive_disable msie6;
  keepalive_requests 1000;
  keepalive_timeout 20s;
  large_client_header_buffers 4 8k;
  lingering_close on;
  lingering_time 20s;
  lingering_timeout 5s;
  log_not_found on;
  log_subrequest off;
  map_hash_bucket_size SEDHASHBUCKETSIZE;
  map_hash_max_size SEDHASHMAXSIZE;
  open_file_cache max=14556 inactive=60s;
  open_file_cache_errors on;
  open_file_cache_min_uses 2;
  open_file_cache_valid 120s;
  open_log_file_cache max=10000 inactive=30s min_uses=2;
  output_buffers 2 32k;
  postpone_output 1460;
  proxy_buffer_size 4k;
  proxy_buffers 64 4k;
  proxy_http_version 1.1;
  proxy_read_timeout 90s;
  proxy_send_timeout 90s;
  proxy_temp_path /tmp/nginx_proxy;
  request_pool_size 32k;
  reset_timedout_connection on;
  sendfile on;
  sendfile_max_chunk 512k;
  send_timeout 30s;
  server_names_hash_bucket_size 128;
  server_names_hash_max_size 512;
  server_name_in_redirect off;
  server_tokens off;
  tcp_nodelay on;
  tcp_nopush on;
  types_hash_bucket_size SEDHBS;
  types_hash_max_size 2048;
  variables_hash_bucket_size SEDHBS;
  variables_hash_max_size 2048;

  # HTTP3 - Experimental (Cloudflare does not support HTTP3 to origin)
  #http3 on;
  #http3_max_concurrent_streams 1024;
  #http3_stream_buffer_size 1024k;
  #quic_gso on;
  #quic_retry on;

  # Dynamic TLS Record Resizing (Nginx Patch)
  ssl_dyn_rec_enable on;
  ssl_dyn_rec_size_hi 4229;
  ssl_dyn_rec_size_lo 1369;
  ssl_dyn_rec_threshold 40;
  ssl_dyn_rec_timeout 1000;

  # SSL Early Data
  ssl_early_data on;

  # FastCGI
  fastcgi_buffer_size 32k;
  fastcgi_buffering on;
  fastcgi_buffers SEDFCGIBUFFERS;
  fastcgi_busy_buffers_size SEDFCGIBUSYBUFFERS;
  fastcgi_connect_timeout 60s;
  fastcgi_ignore_client_abort off;
  fastcgi_intercept_errors off;
  fastcgi_keep_conn on;
  fastcgi_max_temp_file_size 512m;
  fastcgi_pass_header cf-edge-cache;
  fastcgi_read_timeout 120s;
  fastcgi_request_buffering on;
  fastcgi_send_timeout 60s;
  fastcgi_socket_keepalive off;
  fastcgi_temp_file_write_size SEDFCGITEMPFILEWRITESIZE;

  # FastCGI Cache
  fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=EngineScriptWP:SEDSERVERMEM03m inactive=60m max_size=SEDSERVERMEM05m use_temp_path=off;
  fastcgi_cache_key "$scheme$request_method$host$request_uri$http_x_http_method_override$es_session";
  fastcgi_cache_use_stale error http_500 http_503 invalid_header timeout updating;
  fastcgi_ignore_headers Expires Set-Cookie Vary X-Accel-Expires;
  fastcgi_cache_background_update on;
  fastcgi_cache_bypass $skip_cache;
  fastcgi_cache_lock on;
  fastcgi_cache_lock_age 5s;
  fastcgi_cache_lock_timeout 5s;
  fastcgi_cache_methods GET HEAD;
  fastcgi_cache_min_uses 1;
  fastcgi_cache_revalidate on;
  fastcgi_cache_valid 200 3h;
  fastcgi_cache_valid 301 302 0;
  fastcgi_cache_valid 404 10m;
  fastcgi_cache_valid 429 10s;
  fastcgi_cache_valid 499 502 503 12s;
  fastcgi_cache_valid any 10s;
  fastcgi_no_cache $skip_cache;

  # Gzip Compression
  include /etc/nginx/globals/compression-gzip.conf;

  # Brotli Compression
  include /etc/nginx/globals/compression-brotli.conf;

  # Rate Limiting
  # Second portion of rate limiting can be found in vhost .conf files in /etc/nginx/sites-enabled
  # Rate limit set to trigger HTTP code 429: Too Many Requests (Nginx).
  #limit_req_log_level warn;
  #limit_req_zone $binary_remote_addr zone=WP:10m rate=3r/s;

  # Maps
  include /etc/nginx/globals/map-cache.conf;
  include /etc/nginx/globals/map-expires.conf;

  # Server Default Vhost (allows web traffic to server IP)
  include /etc/nginx/admin/admin.localhost.conf;

  # Custom Global Directives
  # Add customizations that you want to run globally across all domains.
  # Your vhost .conf file also has a custom section for settings you only want to run on a single domain.
  # Upload your custom .conf files at /etc/nginx/custom-global-directives/
  include /etc/nginx/custom-global-directives/*.conf;

  # Domain Vhost Directory
  include /etc/nginx/sites-enabled/*.conf;
}

# References
# https://github.com/roots/trellis/pull/1556 - Mitigate REST API cache poisoning via Method Override
# https://github.com/roots/trellis/pull/1555 - Remove Cache-Control from fastcgi_ignore_headers
# https://github.com/roots/trellis/pull/1513 - Add X-Cache-Enabled HTTP header for WordPress Site Health
# https://github.com/roots/trellis/issues/1594 - Redirect loop on multiple sites with 1.25 (1.24)
# https://serverfault.com/questions/1153941/does-anyone-have-a-best-practices-guide-for-nginx-with-http3-quic/1172800#1172800
# https://http3check.net/