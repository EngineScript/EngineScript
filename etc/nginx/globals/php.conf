# Regex to split $uri to $fastcgi_script_name and $fastcgi_path
fastcgi_split_path_info ^(.+\.php)(/.+)$;

# Check that the PHP script exists before passing it
try_files $uri =404;

# Bypass the fact that try_files resets $fastcgi_path_info
# see: https://trac.nginx.org/nginx/ticket/321
#set $path_info $fastcgi_path_info;
#fastcgi_param PATH_INFO $path_info;

include /etc/nginx/fastcgi.conf;
fastcgi_index index.php;

# Exploit mitigation
fastcgi_param HTTP_PROXY "";

fastcgi_cache EngineScriptWP;
fastcgi_pass unix:/run/php/php8.1-fpm.sock;

# HTTP Reponse Headers
include /etc/nginx/globals/responseheaders.conf;

more_clear_headers 'Pragma';
more_clear_headers 'Expires';
more_clear_headers 'Cache-Control';
add_header Cache-Control $wp_cf_super_cache_active;

# Cache Headers
add_header X-FastCGI-Cached $upstream_cache_status always;

# Development and Debug
#include /etc/nginx/globals/debugheaders.conf;
#include /etc/nginx/globals/devrestrictions.conf;

# Prevent Woocommerce Session / Cart Conflicts
set $es_session "";

if ($http_cookie ~* "wp_woocommerce_session_[^=]*=([^%]+)%7C") {
 set $es_session wp_woocommerce_session_$1;
}

if ($skip_cache = 0 ) {
 more_clear_headers "Set-Cookie*";
 set $es_session "";
}
